[{"/Users/macbookpro/web-project/txl-react-ts/src/index.tsx":"1","/Users/macbookpro/web-project/txl-react-ts/src/reportWebVitals.ts":"2","/Users/macbookpro/web-project/txl-react-ts/src/App.tsx":"3","/Users/macbookpro/web-project/txl-react-ts/src/screens/project-list/index.tsx":"4","/Users/macbookpro/web-project/txl-react-ts/src/screens/project-list/list.tsx":"5","/Users/macbookpro/web-project/txl-react-ts/src/screens/project-list/search-panel.tsx":"6","/Users/macbookpro/web-project/txl-react-ts/src/context/index.tsx":"7","/Users/macbookpro/web-project/txl-react-ts/src/context/auth-context.tsx":"8","/Users/macbookpro/web-project/txl-react-ts/src/authenticated-app.tsx":"9","/Users/macbookpro/web-project/txl-react-ts/src/auth-provider.ts":"10","/Users/macbookpro/web-project/txl-react-ts/src/utils/http.ts":"11","/Users/macbookpro/web-project/txl-react-ts/src/unauthenticated-app/index.tsx":"12","/Users/macbookpro/web-project/txl-react-ts/src/unauthenticated-app/register.tsx":"13","/Users/macbookpro/web-project/txl-react-ts/src/unauthenticated-app/login.tsx":"14","/Users/macbookpro/web-project/txl-react-ts/src/utils/index.js":"15","/Users/macbookpro/web-project/txl-react-ts/src/components/lib.tsx":"16"},{"size":678,"mtime":1611804311216,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":1611632245358,"results":"19","hashOfConfig":"18"},{"size":399,"mtime":1611801221168,"results":"20","hashOfConfig":"18"},{"size":1125,"mtime":1611819938142,"results":"21","hashOfConfig":"18"},{"size":1283,"mtime":1611820286597,"results":"22","hashOfConfig":"18"},{"size":1297,"mtime":1611819752852,"results":"23","hashOfConfig":"18"},{"size":216,"mtime":1611794629559,"results":"24","hashOfConfig":"18"},{"size":1830,"mtime":1611798278540,"results":"25","hashOfConfig":"18"},{"size":2603,"mtime":1611821213646,"results":"26","hashOfConfig":"18"},{"size":1658,"mtime":1611794629558,"results":"27","hashOfConfig":"18"},{"size":1438,"mtime":1611798278581,"results":"28","hashOfConfig":"18"},{"size":1799,"mtime":1611804374443,"results":"29","hashOfConfig":"18"},{"size":1010,"mtime":1611804374482,"results":"30","hashOfConfig":"18"},{"size":1001,"mtime":1611804374468,"results":"31","hashOfConfig":"18"},{"size":539,"mtime":1611794629563,"results":"32","hashOfConfig":"18"},{"size":421,"mtime":1611819257466,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"17vxdk5",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/Users/macbookpro/web-project/txl-react-ts/src/index.tsx",[],["72","73"],"/Users/macbookpro/web-project/txl-react-ts/src/reportWebVitals.ts",[],"/Users/macbookpro/web-project/txl-react-ts/src/App.tsx",[],"/Users/macbookpro/web-project/txl-react-ts/src/screens/project-list/index.tsx",["74"],"import React, { useEffect, useState } from \"react\";\nimport { SearchPanel } from \"./search-panel\";\nimport { List } from \"./list\";\nimport { cleanObject, useMount } from \"../../utils\";\nimport { useHttp } from \"../../utils/http\";\nimport styled from \"@emotion/styled\";\n\n/*\n    npm start: 读.env.development文件中的REACT_APP_API_URL变量\n    npm build: 读.env文件中的REACT_APP_API_URL变量\n */\n\nexport const ProjectListScreen = () => {\n  const [users, setUsers] = useState([]);\n\n  const [param, setParam] = useState({\n    name: \"\",\n    personId: \"\",\n  });\n\n  const [list, setList] = useState([]);\n\n  //http请求封装应用\n  const client = useHttp();\n\n  useEffect(() => {\n    client(\"projects\", { data: cleanObject(param) }).then(setList);\n  }, [param]);\n\n  //组件初始化时调用，且仅调用一次\n  useMount(() => {\n    client(\"users\", {}).then(setUsers);\n  });\n\n  return (\n    <Container>\n      <h2>项目列表</h2>\n      <SearchPanel param={param} setParam={setParam} users={users} />\n      <List list={list} users={users} />\n    </Container>\n  );\n};\n\n\nconst Container = styled.div`\n  padding: 3.2rem;\n`\n\n","/Users/macbookpro/web-project/txl-react-ts/src/screens/project-list/list.tsx",[],"/Users/macbookpro/web-project/txl-react-ts/src/screens/project-list/search-panel.tsx",[],"/Users/macbookpro/web-project/txl-react-ts/src/context/index.tsx",[],"/Users/macbookpro/web-project/txl-react-ts/src/context/auth-context.tsx",["75"],"import React, { ReactNode, useState } from \"react\";\nimport * as auth from \"../auth-provider\";\nimport { User } from \"../screens/project-list/search-panel\";\nimport { http } from \"../utils/http\";\nimport { useMount } from \"../utils\";\n\ninterface AuthForm {\n  username: string;\n  password: string;\n}\n\n//1.创建Context容器对象,所有的后代都能访问到的地方\nconst AuthContext = React.createContext<\n  | {\n      user: User | null;\n      register: (form: AuthForm) => Promise<void>;\n      login: (form: AuthForm) => Promise<void>;\n      logout: () => Promise<void>;\n    }\n  | undefined\n>(undefined);\nAuthContext.displayName = \"AuthContext\";\n\n//页面刷新时，重新设置一下user\nconst initUser = async () => {\n  let user = null;\n  const token = auth.getToken();\n  if (token) {\n    const data = await http(\"me\", { token });\n    const user = data.user;\n    return user;\n  }\n};\n\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\n  const [user, setUser] = useState<User | null>(null);\n  //调用auth-provider中的login方法,用户登录成功以后,就把user中的token设置到window的localStorage的__auth_provider_token__中\n  const login = (form: AuthForm) =>\n    auth.login(form).then((user) => setUser(user));\n  const register = (form: AuthForm) =>\n    auth.register(form).then((user) => setUser(user));\n  const logout = () => auth.logout().then(() => setUser(null));\n\n  //组件加载时就初始化user\n  useMount(() => {\n    initUser().then(setUser);\n  });\n\n  return (\n    <AuthContext.Provider\n      children={children}\n      value={{ user, login, register, logout }}\n    />\n  );\n};\n\n//自定义hooks\nexport const useAuth = () => {\n  const context = React.useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth必须在AuthProvider中使用\");\n  }\n  return context;\n};\n","/Users/macbookpro/web-project/txl-react-ts/src/authenticated-app.tsx",["76","77"],"/Users/macbookpro/web-project/txl-react-ts/src/auth-provider.ts",[],"/Users/macbookpro/web-project/txl-react-ts/src/utils/http.ts",[],"/Users/macbookpro/web-project/txl-react-ts/src/unauthenticated-app/index.tsx",["78"],"import React, { useState } from \"react\";\nimport { RegisterScreen } from \"./register\";\nimport { LoginScreen } from \"./login\";\nimport { Card, Divider } from \"antd\";\nimport styled from \"@emotion/styled\";\nimport logo from \"../assets/logo.svg\";\nimport left from \"../assets/left.svg\";\nimport right from \"../assets/right.svg\";\n\nexport const UnauthenticatedApp = () => {\n  //定义状态在登录和注册之间切换\n  const [isRegister, setIsRegister] = useState(false);\n  return (\n    <Container>\n      <Header />\n      <Background />\n      <ShadowCard>\n        <Title>{isRegister ? \"请注册\" : \"请登录\"}</Title>\n        {isRegister ? <RegisterScreen /> : <LoginScreen />}\n        <Divider />\n        <a onClick={() => setIsRegister(!isRegister)}>\n          {isRegister ? \"已经有账号了？直接登录\" : \"注册新账号\"}\n        </a>\n      </ShadowCard>\n    </Container>\n  );\n};\n\nconst Title = styled.h2`\n  margin-bottom: 2.4rem;\n  color: rgb(94, 108, 132);\n`;\n\nconst Background = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: left bottom, right bottom;\n  background-size: calc(((100vw - 40rem) / 2) - 3.2rem),\n    calc(((100vw - 40rem) / 2) - 3.2rem), cover;\n  background-image: url(${left}), url(${right});\n`;\n\nconst Header = styled.header`\n  background: url(${logo}) no-repeat center;\n  padding: 5rem 0;\n  background-size: 8rem;\n  width: 100%;\n`;\n\nconst ShadowCard = styled(Card)`\n  width: 40rem;\n  min-height: 56rem;\n  padding: 3.2rem 4rem;\n  border-radius: 0.3rem;\n  box-sizing: border-box;\n  box-shadow: rgba(0, 0, 0, 0.1) 0 0 10px;\n  text-align: center;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  min-height: 100vh;\n`;\n","/Users/macbookpro/web-project/txl-react-ts/src/unauthenticated-app/register.tsx",[],"/Users/macbookpro/web-project/txl-react-ts/src/unauthenticated-app/login.tsx",[],"/Users/macbookpro/web-project/txl-react-ts/src/utils/index.js",["79"],"import { useEffect } from \"react\";\n\nexport const isFalse = (value) => (value === 0 ? false : !value);\n\n// 在一个函数里,改变传入的对象是不好的,因为js的对象是引用对象\nexport const cleanObject = (object) => {\n  const res = { ...object };\n  Object.keys(res).forEach((key) => {\n    const value = res[key];\n    if (isFalse(value)) {\n      delete res[key];\n    }\n  });\n  return res;\n};\n\n// 抽象出组件加载时执行的函数\nexport const useMount = (callback) => {\n  useEffect(() => {\n    callback();\n  }, []);\n};\n",["80","81"],"/Users/macbookpro/web-project/txl-react-ts/src/components/lib.tsx",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":28,"column":6,"nodeType":"88","endLine":28,"endColumn":13,"suggestions":"89"},{"ruleId":"90","severity":1,"message":"91","line":26,"column":7,"nodeType":"92","messageId":"93","endLine":26,"endColumn":11},{"ruleId":"94","severity":1,"message":"95","line":34,"column":17,"nodeType":"96","endLine":34,"endColumn":37},{"ruleId":"94","severity":1,"message":"95","line":38,"column":13,"nodeType":"96","endLine":38,"endColumn":49},{"ruleId":"94","severity":1,"message":"95","line":21,"column":9,"nodeType":"96","endLine":21,"endColumn":55},{"ruleId":"86","severity":1,"message":"97","line":22,"column":5,"nodeType":"88","endLine":22,"endColumn":7,"suggestions":"98"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'client'. Either include it or remove the dependency array.","ArrayExpression",["101"],"@typescript-eslint/no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'callback'. Either include it or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["102"],"no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},"Update the dependencies array to be: [client, param]",{"range":"107","text":"108"},"Update the dependencies array to be: [callback]",{"range":"109","text":"110"},[713,720],"[client, param]",[449,451],"[callback]"]